#!/bin/sh

# Set mdev
echo /sbin/mdev > /proc/sys/kernel/hotplug
/sbin/mdev -s && echo "mdev is ok......"

# create console and null node for nfsroot
#mknod -m 600 /dev/console c 5 1
#mknod -m 666 /dev/null c 1 3

# Setup the global environment
export PATH=/bin:/sbin:/usr/bin:/usr/sbin
export PATH=/system/bin:$PATH
export PATH=$PATH:/opt/bin:/opt/sbin
export LD_LIBRARY_PATH=/system/lib
export LD_LIBRARY_PATH=/thirdlib:$LD_LIBRARY_PATH
LOGPATH="/var/log/startup.log"


# networking
ifconfig lo up
# ifconfig eth0 192.168.1.80

## Load some common functions:
. /usr/scripts/common_functions.sh
echo "Loaded common functions" >> $LOGPATH

# Start the telnet daemon
# telnetd &

# Set the system time from the hardware clock
# hwclock -s

# Set the GPIO PC13 to high, make the USB Disk can be use
cd /sys/class/gpio
echo 77 > export       #request GPIO
cd gpio77
echo out > direction   #set output direction
echo 0 > active_low    #clear active low
echo 1 > value         #set high level

## Initialize the GPIOS:
#for pin in 25 26 38 39 49; do
#  init_gpio $pin
#done
# the ir_led pin is a special animal and needs active low
#echo 1 > /sys/class/gpio/gpio49/active_low

echo "Initialized gpios" >> $LOGPATH

# Mount partitions from original firmware
mount -t squashfs /dev/mtdblock3 /system
mount -t squashfs /dev/mtdblock2 /mtdrootfs
mount -t jffs2 /dev/mtdblock6 /configs

# Copy over some stuff from original firmware
if [ ! -d /thirdlib ]; then
  cp -a /mtdrootfs/thirdlib /
fi

KERNEL_VERSION=$(uname -r)

# load Azarton drivers
insmod /system/driver/tx-isp-t31.ko isp_clk=100000000
insmod /system/driver/exfat.ko
insmod /system/driver/audio.ko spk_gpio=-1
insmod /system/driver/avpu.ko
insmod /system/driver/sinfo.ko
insmod /system/driver/sample_pwm_core.ko
insmod /system/driver/sample_pwm_hal.ko
insmod /system/driver/rtl8189ftv.ko

# register settings
devmem 0x10011110 32 0x6e094800
devmem 0x10011138 32 0x300
devmem 0x10011134 32 0x200

# start network
if [ ! -f /etc/wpa_supplicant.conf ]; then
  echo "Warning: You have to configure wpa_supplicant in order to use wifi. Please see /etc/wpa_supplicant.conf.dist for further instructions."
else
  wpa_supplicant_status="$(wpa_supplicant -d -B -i wlan0 -c /etc/wpa_supplicant.conf -P /var/run/wpa_supplicant.pid)"
  echo "wpa_supplicant: $wpa_supplicant_status" >> $LOGPATH
  udhcpc_status=$(udhcpc -i wlan0 -p /var/run/udhcpc.pid -s /etc/udhcpc.script -b -x hostname:"$(hostname)")
  echo "udhcpc: $udhcpc_status" >> $LOGPATH
fi

## Sync the via NTP:
if [ ! -f /etc/ntp_srv.conf ]; then
  cp /etc/ntp_srv.conf.dist /etc/ntp_srv.conf
fi
ntp_srv="$(cat "/etc/ntp_srv.conf")"
busybox ntpd -p "$ntp_srv"

## Install busybox and dropbear applets
busybox --install
[ ! -e /usr/bin/ssh ] && ln -s dropbearmulti /usr/bin/ssh
[ ! -e /usr/bin/scp ] && ln -s dropbearmulti /usr/bin/scp
[ ! -e /usr/bin/dropbear ] && ln -s dropbearmulti /usr/bin/dropbear


# Start User Applications:

## Start FTP & SSH Server:
dropbear_status=$(dropbearmulti dropbear -R)
echo "dropbear: $dropbear_status" >> $LOGPATH

bftpd_status=$(bftpd -d)
echo "bftpd: $bftpd_status" >> $LOGPATH

## Create a certificate for the webserver
if [ ! -f /etc/lighttpd.pem ]; then
  export OPENSSL_CONF=/etc/openssl.cnf
  openssl req -new -x509 -keyout /etc/lighttpd.pem -out /etc/lighttpd.pem -days 365 -nodes -subj "/C=DE/ST=Bavaria/L=Munich/O=.../OU=.../CN=.../emailAddress=..."
  chmod 400 /etc/lighttpd.pem
  echo "Created new certificate for webserver" >> $LOGPATH
fi

## Start Webserver:
if [ ! -f /etc/lighttpd.conf ]; then
  cp /etc/lighttpd.conf.dist /etc/lighttpd.conf
fi
lighttpd_status=$(lighttpd -f /etc/lighttpd.conf)
echo "lighttpd: $lighttpd_status" >> $LOGPATH

## Configure OSD:
if [ -f /usr/controlscripts/configureOsd ]; then
    . /usr/controlscripts/configureOsd  2>/dev/null
fi

## Configure Motion:
if [ -f /usr/controlscripts/configureMotion ]; then
    . /usr/controlscripts/configureMotion  2>/dev/null
fi

## Autostart all enabled services:
for i in /etc/autostart/*; do
  $i
done

echo "Startup finished!" >> $LOGPATH
